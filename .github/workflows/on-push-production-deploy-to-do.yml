name: Deploy to DO Droplet

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: set up docker
      uses: docker/setup-buildx-action@v3

    - name: login to docker
      run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

    - name: build and push docker image
      run: |
        docker build -f Dockerfile.prod -t dellatechapps:latest .
        docker push dellatechapps:latest

    - name: scp docker-compose.yml to droplet
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
        source: "docker-compose.prod.yml"
        target: /var/www/dellatechapps/docker-compose.yml

    - name: scp nginx.conf to droplet
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
        source: "nginx.prod.conf"
        target: /etc/nginx/nginx.conf

    - name: ssh to droplet and bring up the container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
        script: |
          cd /var/www/dellatechapps
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker compose pull
          docker compose up
